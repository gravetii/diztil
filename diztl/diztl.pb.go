// Code generated by protoc-gen-go. DO NOT EDIT.
// source: diztl.proto

package diztl

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Node struct {
	// The IP address of the node.
	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	// The unique assigned to the node by the tracker.
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{0}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type FileMetadata struct {
	// The directory containing this file.
	Dir string `protobuf:"bytes,1,opt,name=dir,proto3" json:"dir,omitempty"`
	// ID of the file in the local namespace.
	Id int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Size of the file in bytes.
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// Name of the file.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// The hash data of the file.
	Hash                 *FileHash `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FileMetadata) Reset()         { *m = FileMetadata{} }
func (m *FileMetadata) String() string { return proto.CompactTextString(m) }
func (*FileMetadata) ProtoMessage()    {}
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{1}
}

func (m *FileMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileMetadata.Unmarshal(m, b)
}
func (m *FileMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileMetadata.Marshal(b, m, deterministic)
}
func (m *FileMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileMetadata.Merge(m, src)
}
func (m *FileMetadata) XXX_Size() int {
	return xxx_messageInfo_FileMetadata.Size(m)
}
func (m *FileMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_FileMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_FileMetadata proto.InternalMessageInfo

func (m *FileMetadata) GetDir() string {
	if m != nil {
		return m.Dir
	}
	return ""
}

func (m *FileMetadata) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FileMetadata) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileMetadata) GetHash() *FileHash {
	if m != nil {
		return m.Hash
	}
	return nil
}

type FileHash struct {
	// The checksum of the file.
	Checksum []byte `protobuf:"bytes,1,opt,name=checksum,proto3" json:"checksum,omitempty"`
	// The timestamp at which the file's checksum was calculated.
	Ts                   int64    `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileHash) Reset()         { *m = FileHash{} }
func (m *FileHash) String() string { return proto.CompactTextString(m) }
func (*FileHash) ProtoMessage()    {}
func (*FileHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{2}
}

func (m *FileHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileHash.Unmarshal(m, b)
}
func (m *FileHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileHash.Marshal(b, m, deterministic)
}
func (m *FileHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileHash.Merge(m, src)
}
func (m *FileHash) XXX_Size() int {
	return xxx_messageInfo_FileHash.Size(m)
}
func (m *FileHash) XXX_DiscardUnknown() {
	xxx_messageInfo_FileHash.DiscardUnknown(m)
}

var xxx_messageInfo_FileHash proto.InternalMessageInfo

func (m *FileHash) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *FileHash) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type FileChunk struct {
	// The metadata of the parent file typically sent in the first file chunk.
	Metadata *FileMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The data of this file chunk.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// The chunk number of this chunk of data starting from one.
	Chunk int32 `protobuf:"varint,3,opt,name=chunk,proto3" json:"chunk,omitempty"`
	// The total number of chunks of this file that the receiver should
	// expect...sent only in the first file chunk.
	Chunks               int32    `protobuf:"varint,4,opt,name=chunks,proto3" json:"chunks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileChunk) Reset()         { *m = FileChunk{} }
func (m *FileChunk) String() string { return proto.CompactTextString(m) }
func (*FileChunk) ProtoMessage()    {}
func (*FileChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{3}
}

func (m *FileChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileChunk.Unmarshal(m, b)
}
func (m *FileChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileChunk.Marshal(b, m, deterministic)
}
func (m *FileChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileChunk.Merge(m, src)
}
func (m *FileChunk) XXX_Size() int {
	return xxx_messageInfo_FileChunk.Size(m)
}
func (m *FileChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_FileChunk.DiscardUnknown(m)
}

var xxx_messageInfo_FileChunk proto.InternalMessageInfo

func (m *FileChunk) GetMetadata() *FileMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *FileChunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FileChunk) GetChunk() int32 {
	if m != nil {
		return m.Chunk
	}
	return 0
}

func (m *FileChunk) GetChunks() int32 {
	if m != nil {
		return m.Chunks
	}
	return 0
}

type RegisterReq struct {
	// Register self to the tracker.
	Self                 *Node    `protobuf:"bytes,1,opt,name=self,proto3" json:"self,omitempty"`
	Tracker              string   `protobuf:"bytes,2,opt,name=tracker,proto3" json:"tracker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterReq) Reset()         { *m = RegisterReq{} }
func (m *RegisterReq) String() string { return proto.CompactTextString(m) }
func (*RegisterReq) ProtoMessage()    {}
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{4}
}

func (m *RegisterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterReq.Unmarshal(m, b)
}
func (m *RegisterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterReq.Marshal(b, m, deterministic)
}
func (m *RegisterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterReq.Merge(m, src)
}
func (m *RegisterReq) XXX_Size() int {
	return xxx_messageInfo_RegisterReq.Size(m)
}
func (m *RegisterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterReq proto.InternalMessageInfo

func (m *RegisterReq) GetSelf() *Node {
	if m != nil {
		return m.Self
	}
	return nil
}

func (m *RegisterReq) GetTracker() string {
	if m != nil {
		return m.Tracker
	}
	return ""
}

type RegisterResp struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResp) Reset()         { *m = RegisterResp{} }
func (m *RegisterResp) String() string { return proto.CompactTextString(m) }
func (*RegisterResp) ProtoMessage()    {}
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{5}
}

func (m *RegisterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResp.Unmarshal(m, b)
}
func (m *RegisterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResp.Marshal(b, m, deterministic)
}
func (m *RegisterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResp.Merge(m, src)
}
func (m *RegisterResp) XXX_Size() int {
	return xxx_messageInfo_RegisterResp.Size(m)
}
func (m *RegisterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResp.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResp proto.InternalMessageInfo

func (m *RegisterResp) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type SearchReq struct {
	// The filename to search for.
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// The origin node of this request.
	Source               *Node           `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Constraint           *FileConstraint `protobuf:"bytes,3,opt,name=constraint,proto3" json:"constraint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SearchReq) Reset()         { *m = SearchReq{} }
func (m *SearchReq) String() string { return proto.CompactTextString(m) }
func (*SearchReq) ProtoMessage()    {}
func (*SearchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{6}
}

func (m *SearchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReq.Unmarshal(m, b)
}
func (m *SearchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReq.Marshal(b, m, deterministic)
}
func (m *SearchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReq.Merge(m, src)
}
func (m *SearchReq) XXX_Size() int {
	return xxx_messageInfo_SearchReq.Size(m)
}
func (m *SearchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReq.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReq proto.InternalMessageInfo

func (m *SearchReq) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchReq) GetSource() *Node {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *SearchReq) GetConstraint() *FileConstraint {
	if m != nil {
		return m.Constraint
	}
	return nil
}

type SearchResp struct {
	// The list of files gathered from all the nodes in the network that might
	// be of interest to the calling node.
	Files []*FileMetadata `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	// The node to which the files belong.
	Node                 *Node    `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResp) Reset()         { *m = SearchResp{} }
func (m *SearchResp) String() string { return proto.CompactTextString(m) }
func (*SearchResp) ProtoMessage()    {}
func (*SearchResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{7}
}

func (m *SearchResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResp.Unmarshal(m, b)
}
func (m *SearchResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResp.Marshal(b, m, deterministic)
}
func (m *SearchResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResp.Merge(m, src)
}
func (m *SearchResp) XXX_Size() int {
	return xxx_messageInfo_SearchResp.Size(m)
}
func (m *SearchResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResp.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResp proto.InternalMessageInfo

func (m *SearchResp) GetFiles() []*FileMetadata {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *SearchResp) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type FindReq struct {
	Query                string          `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Constraint           *FileConstraint `protobuf:"bytes,2,opt,name=constraint,proto3" json:"constraint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FindReq) Reset()         { *m = FindReq{} }
func (m *FindReq) String() string { return proto.CompactTextString(m) }
func (*FindReq) ProtoMessage()    {}
func (*FindReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{8}
}

func (m *FindReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindReq.Unmarshal(m, b)
}
func (m *FindReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindReq.Marshal(b, m, deterministic)
}
func (m *FindReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindReq.Merge(m, src)
}
func (m *FindReq) XXX_Size() int {
	return xxx_messageInfo_FindReq.Size(m)
}
func (m *FindReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindReq proto.InternalMessageInfo

func (m *FindReq) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *FindReq) GetConstraint() *FileConstraint {
	if m != nil {
		return m.Constraint
	}
	return nil
}

type FindResp struct {
	Responses            []*SearchResp `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FindResp) Reset()         { *m = FindResp{} }
func (m *FindResp) String() string { return proto.CompactTextString(m) }
func (*FindResp) ProtoMessage()    {}
func (*FindResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{9}
}

func (m *FindResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindResp.Unmarshal(m, b)
}
func (m *FindResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindResp.Marshal(b, m, deterministic)
}
func (m *FindResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindResp.Merge(m, src)
}
func (m *FindResp) XXX_Size() int {
	return xxx_messageInfo_FindResp.Size(m)
}
func (m *FindResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FindResp.DiscardUnknown(m)
}

var xxx_messageInfo_FindResp proto.InternalMessageInfo

func (m *FindResp) GetResponses() []*SearchResp {
	if m != nil {
		return m.Responses
	}
	return nil
}

type UploadContract struct {
	// The file chunk size which the receiver node specifies while sending an
	// upload request to the sender node. The sender node has to honour this value
	// and create chunks of this size when it uploads the file to the receiver to
	// not overwhelm it when it processes the downloaded chunks.
	ChunkSize            int32    `protobuf:"varint,1,opt,name=chunkSize,proto3" json:"chunkSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadContract) Reset()         { *m = UploadContract{} }
func (m *UploadContract) String() string { return proto.CompactTextString(m) }
func (*UploadContract) ProtoMessage()    {}
func (*UploadContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{10}
}

func (m *UploadContract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadContract.Unmarshal(m, b)
}
func (m *UploadContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadContract.Marshal(b, m, deterministic)
}
func (m *UploadContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadContract.Merge(m, src)
}
func (m *UploadContract) XXX_Size() int {
	return xxx_messageInfo_UploadContract.Size(m)
}
func (m *UploadContract) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadContract.DiscardUnknown(m)
}

var xxx_messageInfo_UploadContract proto.InternalMessageInfo

func (m *UploadContract) GetChunkSize() int32 {
	if m != nil {
		return m.ChunkSize
	}
	return 0
}

type UploadReq struct {
	// The node from which the requester node wants to download a file of interest.
	Source *Node `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// The metadata of the file to download.
	Metadata *FileMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The upload contract that the receiver node wants to let the sender node know.
	Contract             *UploadContract `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UploadReq) Reset()         { *m = UploadReq{} }
func (m *UploadReq) String() string { return proto.CompactTextString(m) }
func (*UploadReq) ProtoMessage()    {}
func (*UploadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{11}
}

func (m *UploadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadReq.Unmarshal(m, b)
}
func (m *UploadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadReq.Marshal(b, m, deterministic)
}
func (m *UploadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadReq.Merge(m, src)
}
func (m *UploadReq) XXX_Size() int {
	return xxx_messageInfo_UploadReq.Size(m)
}
func (m *UploadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadReq.DiscardUnknown(m)
}

var xxx_messageInfo_UploadReq proto.InternalMessageInfo

func (m *UploadReq) GetSource() *Node {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *UploadReq) GetMetadata() *FileMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *UploadReq) GetContract() *UploadContract {
	if m != nil {
		return m.Contract
	}
	return nil
}

type DownloadReq struct {
	Source *Node         `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	File   *FileMetadata `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	// the custom downloads directory, if chosen.
	Dir                  string   `protobuf:"bytes,3,opt,name=dir,proto3" json:"dir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadReq) Reset()         { *m = DownloadReq{} }
func (m *DownloadReq) String() string { return proto.CompactTextString(m) }
func (*DownloadReq) ProtoMessage()    {}
func (*DownloadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{12}
}

func (m *DownloadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadReq.Unmarshal(m, b)
}
func (m *DownloadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadReq.Marshal(b, m, deterministic)
}
func (m *DownloadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadReq.Merge(m, src)
}
func (m *DownloadReq) XXX_Size() int {
	return xxx_messageInfo_DownloadReq.Size(m)
}
func (m *DownloadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadReq.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadReq proto.InternalMessageInfo

func (m *DownloadReq) GetSource() *Node {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *DownloadReq) GetFile() *FileMetadata {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *DownloadReq) GetDir() string {
	if m != nil {
		return m.Dir
	}
	return ""
}

type DownloadChunk struct {
	// Total number of chunks constituting the file; sent only in the first chunk.
	Chunks int32 `protobuf:"varint,1,opt,name=chunks,proto3" json:"chunks,omitempty"`
	// The chunk number.
	Chunk                int32    `protobuf:"varint,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadChunk) Reset()         { *m = DownloadChunk{} }
func (m *DownloadChunk) String() string { return proto.CompactTextString(m) }
func (*DownloadChunk) ProtoMessage()    {}
func (*DownloadChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{13}
}

func (m *DownloadChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadChunk.Unmarshal(m, b)
}
func (m *DownloadChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadChunk.Marshal(b, m, deterministic)
}
func (m *DownloadChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadChunk.Merge(m, src)
}
func (m *DownloadChunk) XXX_Size() int {
	return xxx_messageInfo_DownloadChunk.Size(m)
}
func (m *DownloadChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadChunk.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadChunk proto.InternalMessageInfo

func (m *DownloadChunk) GetChunks() int32 {
	if m != nil {
		return m.Chunks
	}
	return 0
}

func (m *DownloadChunk) GetChunk() int32 {
	if m != nil {
		return m.Chunk
	}
	return 0
}

type DisconnectReq struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectReq) Reset()         { *m = DisconnectReq{} }
func (m *DisconnectReq) String() string { return proto.CompactTextString(m) }
func (*DisconnectReq) ProtoMessage()    {}
func (*DisconnectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{14}
}

func (m *DisconnectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectReq.Unmarshal(m, b)
}
func (m *DisconnectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectReq.Marshal(b, m, deterministic)
}
func (m *DisconnectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectReq.Merge(m, src)
}
func (m *DisconnectReq) XXX_Size() int {
	return xxx_messageInfo_DisconnectReq.Size(m)
}
func (m *DisconnectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectReq.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectReq proto.InternalMessageInfo

func (m *DisconnectReq) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type DisconnectResp struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectResp) Reset()         { *m = DisconnectResp{} }
func (m *DisconnectResp) String() string { return proto.CompactTextString(m) }
func (*DisconnectResp) ProtoMessage()    {}
func (*DisconnectResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{15}
}

func (m *DisconnectResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectResp.Unmarshal(m, b)
}
func (m *DisconnectResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectResp.Marshal(b, m, deterministic)
}
func (m *DisconnectResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectResp.Merge(m, src)
}
func (m *DisconnectResp) XXX_Size() int {
	return xxx_messageInfo_DisconnectResp.Size(m)
}
func (m *DisconnectResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectResp.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectResp proto.InternalMessageInfo

func (m *DisconnectResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PingReq struct {
	Source               *Node    `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Dest                 *Node    `protobuf:"bytes,2,opt,name=dest,proto3" json:"dest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingReq) Reset()         { *m = PingReq{} }
func (m *PingReq) String() string { return proto.CompactTextString(m) }
func (*PingReq) ProtoMessage()    {}
func (*PingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{16}
}

func (m *PingReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingReq.Unmarshal(m, b)
}
func (m *PingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingReq.Marshal(b, m, deterministic)
}
func (m *PingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReq.Merge(m, src)
}
func (m *PingReq) XXX_Size() int {
	return xxx_messageInfo_PingReq.Size(m)
}
func (m *PingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReq.DiscardUnknown(m)
}

var xxx_messageInfo_PingReq proto.InternalMessageInfo

func (m *PingReq) GetSource() *Node {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *PingReq) GetDest() *Node {
	if m != nil {
		return m.Dest
	}
	return nil
}

type PingResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResp) Reset()         { *m = PingResp{} }
func (m *PingResp) String() string { return proto.CompactTextString(m) }
func (*PingResp) ProtoMessage()    {}
func (*PingResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{17}
}

func (m *PingResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResp.Unmarshal(m, b)
}
func (m *PingResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResp.Marshal(b, m, deterministic)
}
func (m *PingResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResp.Merge(m, src)
}
func (m *PingResp) XXX_Size() int {
	return xxx_messageInfo_PingResp.Size(m)
}
func (m *PingResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResp.DiscardUnknown(m)
}

var xxx_messageInfo_PingResp proto.InternalMessageInfo

func (m *PingResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PingResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UserDirsReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserDirsReq) Reset()         { *m = UserDirsReq{} }
func (m *UserDirsReq) String() string { return proto.CompactTextString(m) }
func (*UserDirsReq) ProtoMessage()    {}
func (*UserDirsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{18}
}

func (m *UserDirsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDirsReq.Unmarshal(m, b)
}
func (m *UserDirsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDirsReq.Marshal(b, m, deterministic)
}
func (m *UserDirsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDirsReq.Merge(m, src)
}
func (m *UserDirsReq) XXX_Size() int {
	return xxx_messageInfo_UserDirsReq.Size(m)
}
func (m *UserDirsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDirsReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserDirsReq proto.InternalMessageInfo

type UserDirsResp struct {
	Share                []string `protobuf:"bytes,1,rep,name=share,proto3" json:"share,omitempty"`
	Downloads            string   `protobuf:"bytes,2,opt,name=downloads,proto3" json:"downloads,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserDirsResp) Reset()         { *m = UserDirsResp{} }
func (m *UserDirsResp) String() string { return proto.CompactTextString(m) }
func (*UserDirsResp) ProtoMessage()    {}
func (*UserDirsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{19}
}

func (m *UserDirsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDirsResp.Unmarshal(m, b)
}
func (m *UserDirsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDirsResp.Marshal(b, m, deterministic)
}
func (m *UserDirsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDirsResp.Merge(m, src)
}
func (m *UserDirsResp) XXX_Size() int {
	return xxx_messageInfo_UserDirsResp.Size(m)
}
func (m *UserDirsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDirsResp.DiscardUnknown(m)
}

var xxx_messageInfo_UserDirsResp proto.InternalMessageInfo

func (m *UserDirsResp) GetShare() []string {
	if m != nil {
		return m.Share
	}
	return nil
}

func (m *UserDirsResp) GetDownloads() string {
	if m != nil {
		return m.Downloads
	}
	return ""
}

type UpdateUserDirsReq struct {
	Share                []string `protobuf:"bytes,1,rep,name=share,proto3" json:"share,omitempty"`
	Downloads            string   `protobuf:"bytes,2,opt,name=downloads,proto3" json:"downloads,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserDirsReq) Reset()         { *m = UpdateUserDirsReq{} }
func (m *UpdateUserDirsReq) String() string { return proto.CompactTextString(m) }
func (*UpdateUserDirsReq) ProtoMessage()    {}
func (*UpdateUserDirsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{20}
}

func (m *UpdateUserDirsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserDirsReq.Unmarshal(m, b)
}
func (m *UpdateUserDirsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserDirsReq.Marshal(b, m, deterministic)
}
func (m *UpdateUserDirsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserDirsReq.Merge(m, src)
}
func (m *UpdateUserDirsReq) XXX_Size() int {
	return xxx_messageInfo_UpdateUserDirsReq.Size(m)
}
func (m *UpdateUserDirsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserDirsReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserDirsReq proto.InternalMessageInfo

func (m *UpdateUserDirsReq) GetShare() []string {
	if m != nil {
		return m.Share
	}
	return nil
}

func (m *UpdateUserDirsReq) GetDownloads() string {
	if m != nil {
		return m.Downloads
	}
	return ""
}

type UpdateUserDirsResp struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserDirsResp) Reset()         { *m = UpdateUserDirsResp{} }
func (m *UpdateUserDirsResp) String() string { return proto.CompactTextString(m) }
func (*UpdateUserDirsResp) ProtoMessage()    {}
func (*UpdateUserDirsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{21}
}

func (m *UpdateUserDirsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserDirsResp.Unmarshal(m, b)
}
func (m *UpdateUserDirsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserDirsResp.Marshal(b, m, deterministic)
}
func (m *UpdateUserDirsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserDirsResp.Merge(m, src)
}
func (m *UpdateUserDirsResp) XXX_Size() int {
	return xxx_messageInfo_UpdateUserDirsResp.Size(m)
}
func (m *UpdateUserDirsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserDirsResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserDirsResp proto.InternalMessageInfo

func (m *UpdateUserDirsResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetTrackerReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTrackerReq) Reset()         { *m = GetTrackerReq{} }
func (m *GetTrackerReq) String() string { return proto.CompactTextString(m) }
func (*GetTrackerReq) ProtoMessage()    {}
func (*GetTrackerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{22}
}

func (m *GetTrackerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTrackerReq.Unmarshal(m, b)
}
func (m *GetTrackerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTrackerReq.Marshal(b, m, deterministic)
}
func (m *GetTrackerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTrackerReq.Merge(m, src)
}
func (m *GetTrackerReq) XXX_Size() int {
	return xxx_messageInfo_GetTrackerReq.Size(m)
}
func (m *GetTrackerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTrackerReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTrackerReq proto.InternalMessageInfo

type GetTrackerResp struct {
	Tracker              string   `protobuf:"bytes,1,opt,name=tracker,proto3" json:"tracker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTrackerResp) Reset()         { *m = GetTrackerResp{} }
func (m *GetTrackerResp) String() string { return proto.CompactTextString(m) }
func (*GetTrackerResp) ProtoMessage()    {}
func (*GetTrackerResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{23}
}

func (m *GetTrackerResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTrackerResp.Unmarshal(m, b)
}
func (m *GetTrackerResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTrackerResp.Marshal(b, m, deterministic)
}
func (m *GetTrackerResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTrackerResp.Merge(m, src)
}
func (m *GetTrackerResp) XXX_Size() int {
	return xxx_messageInfo_GetTrackerResp.Size(m)
}
func (m *GetTrackerResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTrackerResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetTrackerResp proto.InternalMessageInfo

func (m *GetTrackerResp) GetTracker() string {
	if m != nil {
		return m.Tracker
	}
	return ""
}

type UpdateTrackerReq struct {
	Tracker              string   `protobuf:"bytes,1,opt,name=tracker,proto3" json:"tracker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTrackerReq) Reset()         { *m = UpdateTrackerReq{} }
func (m *UpdateTrackerReq) String() string { return proto.CompactTextString(m) }
func (*UpdateTrackerReq) ProtoMessage()    {}
func (*UpdateTrackerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{24}
}

func (m *UpdateTrackerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTrackerReq.Unmarshal(m, b)
}
func (m *UpdateTrackerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTrackerReq.Marshal(b, m, deterministic)
}
func (m *UpdateTrackerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTrackerReq.Merge(m, src)
}
func (m *UpdateTrackerReq) XXX_Size() int {
	return xxx_messageInfo_UpdateTrackerReq.Size(m)
}
func (m *UpdateTrackerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTrackerReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTrackerReq proto.InternalMessageInfo

func (m *UpdateTrackerReq) GetTracker() string {
	if m != nil {
		return m.Tracker
	}
	return ""
}

type UpdateTrackerResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTrackerResp) Reset()         { *m = UpdateTrackerResp{} }
func (m *UpdateTrackerResp) String() string { return proto.CompactTextString(m) }
func (*UpdateTrackerResp) ProtoMessage()    {}
func (*UpdateTrackerResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{25}
}

func (m *UpdateTrackerResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTrackerResp.Unmarshal(m, b)
}
func (m *UpdateTrackerResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTrackerResp.Marshal(b, m, deterministic)
}
func (m *UpdateTrackerResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTrackerResp.Merge(m, src)
}
func (m *UpdateTrackerResp) XXX_Size() int {
	return xxx_messageInfo_UpdateTrackerResp.Size(m)
}
func (m *UpdateTrackerResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTrackerResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTrackerResp proto.InternalMessageInfo

func (m *UpdateTrackerResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type IndexReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexReq) Reset()         { *m = IndexReq{} }
func (m *IndexReq) String() string { return proto.CompactTextString(m) }
func (*IndexReq) ProtoMessage()    {}
func (*IndexReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{26}
}

func (m *IndexReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexReq.Unmarshal(m, b)
}
func (m *IndexReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexReq.Marshal(b, m, deterministic)
}
func (m *IndexReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexReq.Merge(m, src)
}
func (m *IndexReq) XXX_Size() int {
	return xxx_messageInfo_IndexReq.Size(m)
}
func (m *IndexReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexReq.DiscardUnknown(m)
}

var xxx_messageInfo_IndexReq proto.InternalMessageInfo

type IndexResp struct {
	Fpath                string   `protobuf:"bytes,1,opt,name=fpath,proto3" json:"fpath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexResp) Reset()         { *m = IndexResp{} }
func (m *IndexResp) String() string { return proto.CompactTextString(m) }
func (*IndexResp) ProtoMessage()    {}
func (*IndexResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{27}
}

func (m *IndexResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexResp.Unmarshal(m, b)
}
func (m *IndexResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexResp.Marshal(b, m, deterministic)
}
func (m *IndexResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexResp.Merge(m, src)
}
func (m *IndexResp) XXX_Size() int {
	return xxx_messageInfo_IndexResp.Size(m)
}
func (m *IndexResp) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexResp.DiscardUnknown(m)
}

var xxx_messageInfo_IndexResp proto.InternalMessageInfo

func (m *IndexResp) GetFpath() string {
	if m != nil {
		return m.Fpath
	}
	return ""
}

type CloseReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseReq) Reset()         { *m = CloseReq{} }
func (m *CloseReq) String() string { return proto.CompactTextString(m) }
func (*CloseReq) ProtoMessage()    {}
func (*CloseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{28}
}

func (m *CloseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseReq.Unmarshal(m, b)
}
func (m *CloseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseReq.Marshal(b, m, deterministic)
}
func (m *CloseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseReq.Merge(m, src)
}
func (m *CloseReq) XXX_Size() int {
	return xxx_messageInfo_CloseReq.Size(m)
}
func (m *CloseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseReq.DiscardUnknown(m)
}

var xxx_messageInfo_CloseReq proto.InternalMessageInfo

type CloseResp struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseResp) Reset()         { *m = CloseResp{} }
func (m *CloseResp) String() string { return proto.CompactTextString(m) }
func (*CloseResp) ProtoMessage()    {}
func (*CloseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{29}
}

func (m *CloseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseResp.Unmarshal(m, b)
}
func (m *CloseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseResp.Marshal(b, m, deterministic)
}
func (m *CloseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseResp.Merge(m, src)
}
func (m *CloseResp) XXX_Size() int {
	return xxx_messageInfo_CloseResp.Size(m)
}
func (m *CloseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseResp.DiscardUnknown(m)
}

var xxx_messageInfo_CloseResp proto.InternalMessageInfo

func (m *CloseResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SizeConstraint struct {
	// key indicates the nature of the value.
	// 0 - at least
	// 1 - less than
	Key int32 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	// the size value in bytes.
	Value                int64    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SizeConstraint) Reset()         { *m = SizeConstraint{} }
func (m *SizeConstraint) String() string { return proto.CompactTextString(m) }
func (*SizeConstraint) ProtoMessage()    {}
func (*SizeConstraint) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{30}
}

func (m *SizeConstraint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SizeConstraint.Unmarshal(m, b)
}
func (m *SizeConstraint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SizeConstraint.Marshal(b, m, deterministic)
}
func (m *SizeConstraint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SizeConstraint.Merge(m, src)
}
func (m *SizeConstraint) XXX_Size() int {
	return xxx_messageInfo_SizeConstraint.Size(m)
}
func (m *SizeConstraint) XXX_DiscardUnknown() {
	xxx_messageInfo_SizeConstraint.DiscardUnknown(m)
}

var xxx_messageInfo_SizeConstraint proto.InternalMessageInfo

func (m *SizeConstraint) GetKey() int32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *SizeConstraint) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type TypeConstraint struct {
	// type indicates the file type.
	// 0 - Any (disregard the constraint)
	// 1 - video - mp4, mkv, mpeg, mov, webm, flv
	// 2 - image - png, jpg, jpeg, ico, gif
	// 3 - audio - mp3, wav, ogg
	// 4 - document - txt, pdf, ppt, doc, xls, csv
	// 5 - compressed - zip, gz, rar, 7z
	// 6 - executable - exe, dmg, sh
	Type                 int32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TypeConstraint) Reset()         { *m = TypeConstraint{} }
func (m *TypeConstraint) String() string { return proto.CompactTextString(m) }
func (*TypeConstraint) ProtoMessage()    {}
func (*TypeConstraint) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{31}
}

func (m *TypeConstraint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeConstraint.Unmarshal(m, b)
}
func (m *TypeConstraint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeConstraint.Marshal(b, m, deterministic)
}
func (m *TypeConstraint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeConstraint.Merge(m, src)
}
func (m *TypeConstraint) XXX_Size() int {
	return xxx_messageInfo_TypeConstraint.Size(m)
}
func (m *TypeConstraint) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeConstraint.DiscardUnknown(m)
}

var xxx_messageInfo_TypeConstraint proto.InternalMessageInfo

func (m *TypeConstraint) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type FileConstraint struct {
	Csize                *SizeConstraint `protobuf:"bytes,1,opt,name=csize,proto3" json:"csize,omitempty"`
	Ctype                *TypeConstraint `protobuf:"bytes,2,opt,name=ctype,proto3" json:"ctype,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FileConstraint) Reset()         { *m = FileConstraint{} }
func (m *FileConstraint) String() string { return proto.CompactTextString(m) }
func (*FileConstraint) ProtoMessage()    {}
func (*FileConstraint) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{32}
}

func (m *FileConstraint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileConstraint.Unmarshal(m, b)
}
func (m *FileConstraint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileConstraint.Marshal(b, m, deterministic)
}
func (m *FileConstraint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileConstraint.Merge(m, src)
}
func (m *FileConstraint) XXX_Size() int {
	return xxx_messageInfo_FileConstraint.Size(m)
}
func (m *FileConstraint) XXX_DiscardUnknown() {
	xxx_messageInfo_FileConstraint.DiscardUnknown(m)
}

var xxx_messageInfo_FileConstraint proto.InternalMessageInfo

func (m *FileConstraint) GetCsize() *SizeConstraint {
	if m != nil {
		return m.Csize
	}
	return nil
}

func (m *FileConstraint) GetCtype() *TypeConstraint {
	if m != nil {
		return m.Ctype
	}
	return nil
}

type FetchFileListReq struct {
	Node                 *Node         `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	File                 *FileMetadata `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FetchFileListReq) Reset()         { *m = FetchFileListReq{} }
func (m *FetchFileListReq) String() string { return proto.CompactTextString(m) }
func (*FetchFileListReq) ProtoMessage()    {}
func (*FetchFileListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{33}
}

func (m *FetchFileListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchFileListReq.Unmarshal(m, b)
}
func (m *FetchFileListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchFileListReq.Marshal(b, m, deterministic)
}
func (m *FetchFileListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchFileListReq.Merge(m, src)
}
func (m *FetchFileListReq) XXX_Size() int {
	return xxx_messageInfo_FetchFileListReq.Size(m)
}
func (m *FetchFileListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchFileListReq.DiscardUnknown(m)
}

var xxx_messageInfo_FetchFileListReq proto.InternalMessageInfo

func (m *FetchFileListReq) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *FetchFileListReq) GetFile() *FileMetadata {
	if m != nil {
		return m.File
	}
	return nil
}

type FetchFileListResp struct {
	Files                []*FileMetadata `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FetchFileListResp) Reset()         { *m = FetchFileListResp{} }
func (m *FetchFileListResp) String() string { return proto.CompactTextString(m) }
func (*FetchFileListResp) ProtoMessage()    {}
func (*FetchFileListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{34}
}

func (m *FetchFileListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchFileListResp.Unmarshal(m, b)
}
func (m *FetchFileListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchFileListResp.Marshal(b, m, deterministic)
}
func (m *FetchFileListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchFileListResp.Merge(m, src)
}
func (m *FetchFileListResp) XXX_Size() int {
	return xxx_messageInfo_FetchFileListResp.Size(m)
}
func (m *FetchFileListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchFileListResp.DiscardUnknown(m)
}

var xxx_messageInfo_FetchFileListResp proto.InternalMessageInfo

func (m *FetchFileListResp) GetFiles() []*FileMetadata {
	if m != nil {
		return m.Files
	}
	return nil
}

type GetFileListReq struct {
	File                 *FileMetadata `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Source               *Node         `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetFileListReq) Reset()         { *m = GetFileListReq{} }
func (m *GetFileListReq) String() string { return proto.CompactTextString(m) }
func (*GetFileListReq) ProtoMessage()    {}
func (*GetFileListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{35}
}

func (m *GetFileListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileListReq.Unmarshal(m, b)
}
func (m *GetFileListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileListReq.Marshal(b, m, deterministic)
}
func (m *GetFileListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileListReq.Merge(m, src)
}
func (m *GetFileListReq) XXX_Size() int {
	return xxx_messageInfo_GetFileListReq.Size(m)
}
func (m *GetFileListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileListReq proto.InternalMessageInfo

func (m *GetFileListReq) GetFile() *FileMetadata {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *GetFileListReq) GetSource() *Node {
	if m != nil {
		return m.Source
	}
	return nil
}

type GetFileListResp struct {
	Files                []*FileMetadata `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetFileListResp) Reset()         { *m = GetFileListResp{} }
func (m *GetFileListResp) String() string { return proto.CompactTextString(m) }
func (*GetFileListResp) ProtoMessage()    {}
func (*GetFileListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{36}
}

func (m *GetFileListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFileListResp.Unmarshal(m, b)
}
func (m *GetFileListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFileListResp.Marshal(b, m, deterministic)
}
func (m *GetFileListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFileListResp.Merge(m, src)
}
func (m *GetFileListResp) XXX_Size() int {
	return xxx_messageInfo_GetFileListResp.Size(m)
}
func (m *GetFileListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFileListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetFileListResp proto.InternalMessageInfo

func (m *GetFileListResp) GetFiles() []*FileMetadata {
	if m != nil {
		return m.Files
	}
	return nil
}

func init() {
	proto.RegisterType((*Node)(nil), "Node")
	proto.RegisterType((*FileMetadata)(nil), "FileMetadata")
	proto.RegisterType((*FileHash)(nil), "FileHash")
	proto.RegisterType((*FileChunk)(nil), "FileChunk")
	proto.RegisterType((*RegisterReq)(nil), "RegisterReq")
	proto.RegisterType((*RegisterResp)(nil), "RegisterResp")
	proto.RegisterType((*SearchReq)(nil), "SearchReq")
	proto.RegisterType((*SearchResp)(nil), "SearchResp")
	proto.RegisterType((*FindReq)(nil), "FindReq")
	proto.RegisterType((*FindResp)(nil), "FindResp")
	proto.RegisterType((*UploadContract)(nil), "UploadContract")
	proto.RegisterType((*UploadReq)(nil), "UploadReq")
	proto.RegisterType((*DownloadReq)(nil), "DownloadReq")
	proto.RegisterType((*DownloadChunk)(nil), "DownloadChunk")
	proto.RegisterType((*DisconnectReq)(nil), "DisconnectReq")
	proto.RegisterType((*DisconnectResp)(nil), "DisconnectResp")
	proto.RegisterType((*PingReq)(nil), "PingReq")
	proto.RegisterType((*PingResp)(nil), "PingResp")
	proto.RegisterType((*UserDirsReq)(nil), "UserDirsReq")
	proto.RegisterType((*UserDirsResp)(nil), "UserDirsResp")
	proto.RegisterType((*UpdateUserDirsReq)(nil), "UpdateUserDirsReq")
	proto.RegisterType((*UpdateUserDirsResp)(nil), "UpdateUserDirsResp")
	proto.RegisterType((*GetTrackerReq)(nil), "GetTrackerReq")
	proto.RegisterType((*GetTrackerResp)(nil), "GetTrackerResp")
	proto.RegisterType((*UpdateTrackerReq)(nil), "UpdateTrackerReq")
	proto.RegisterType((*UpdateTrackerResp)(nil), "UpdateTrackerResp")
	proto.RegisterType((*IndexReq)(nil), "IndexReq")
	proto.RegisterType((*IndexResp)(nil), "IndexResp")
	proto.RegisterType((*CloseReq)(nil), "CloseReq")
	proto.RegisterType((*CloseResp)(nil), "CloseResp")
	proto.RegisterType((*SizeConstraint)(nil), "SizeConstraint")
	proto.RegisterType((*TypeConstraint)(nil), "TypeConstraint")
	proto.RegisterType((*FileConstraint)(nil), "FileConstraint")
	proto.RegisterType((*FetchFileListReq)(nil), "FetchFileListReq")
	proto.RegisterType((*FetchFileListResp)(nil), "FetchFileListResp")
	proto.RegisterType((*GetFileListReq)(nil), "GetFileListReq")
	proto.RegisterType((*GetFileListResp)(nil), "GetFileListResp")
}

func init() { proto.RegisterFile("diztl.proto", fileDescriptor_fa22f24bd08bc677) }

var fileDescriptor_fa22f24bd08bc677 = []byte{
	// 1139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0x4d, 0x6f, 0xdb, 0x46,
	0x13, 0x26, 0x25, 0xd1, 0x16, 0x47, 0x12, 0x6d, 0xcf, 0x1b, 0x04, 0x0a, 0xf1, 0x06, 0x70, 0x36,
	0x71, 0x6b, 0xbb, 0xc6, 0x36, 0x50, 0xd1, 0xc0, 0x40, 0xd1, 0x8b, 0x65, 0xd8, 0x2d, 0x90, 0x16,
	0x06, 0x1d, 0x5f, 0x0b, 0x30, 0xe4, 0x5a, 0x22, 0x2c, 0x93, 0x34, 0x97, 0x72, 0xe2, 0x1c, 0xfb,
	0x17, 0xfa, 0x6f, 0x7b, 0x2a, 0x66, 0xf9, 0x2d, 0xd9, 0x8a, 0xda, 0xdb, 0xce, 0xee, 0xce, 0xe7,
	0xce, 0xf3, 0x0c, 0x09, 0x3d, 0x3f, 0xf8, 0x92, 0xce, 0x78, 0x9c, 0x44, 0x69, 0xc4, 0xbe, 0x81,
	0xce, 0xef, 0x91, 0x2f, 0xd0, 0x82, 0x56, 0x10, 0x0f, 0xf5, 0x5d, 0x7d, 0xdf, 0x74, 0x5a, 0x41,
	0xac, 0x64, 0x7f, 0xd8, 0xca, 0x65, 0x9f, 0x7d, 0x82, 0xfe, 0x59, 0x30, 0x13, 0xbf, 0x89, 0xd4,
	0xf5, 0xdd, 0xd4, 0xc5, 0x6d, 0x68, 0xfb, 0x41, 0x92, 0x2b, 0xd0, 0xb2, 0xa6, 0x61, 0x90, 0x06,
	0x22, 0x74, 0x64, 0xf0, 0x45, 0x0c, 0xdb, 0xbb, 0xfa, 0x7e, 0xdb, 0x51, 0x6b, 0xda, 0x0b, 0xdd,
	0x5b, 0x31, 0xec, 0x28, 0x35, 0xb5, 0xc6, 0x97, 0xd0, 0x99, 0xba, 0x72, 0x3a, 0x34, 0x76, 0xf5,
	0xfd, 0xde, 0xc8, 0xe4, 0xe4, 0xe6, 0x17, 0x57, 0x4e, 0x1d, 0xb5, 0xcd, 0xde, 0x41, 0xb7, 0xd8,
	0x41, 0x1b, 0xba, 0xde, 0x54, 0x78, 0x37, 0x72, 0x7e, 0xab, 0x3c, 0xf7, 0x9d, 0x52, 0x26, 0xf7,
	0xa9, 0x54, 0xee, 0xdb, 0x4e, 0x2b, 0x95, 0xec, 0x33, 0x98, 0xa4, 0x37, 0x9e, 0xce, 0xc3, 0x1b,
	0x3c, 0x80, 0xee, 0x6d, 0x1e, 0xb9, 0x52, 0xec, 0x8d, 0x06, 0xbc, 0x9e, 0x8e, 0x53, 0x1e, 0x53,
	0x88, 0xea, 0x5a, 0x4b, 0xd9, 0x57, 0x6b, 0x7c, 0x06, 0x86, 0x47, 0x76, 0x54, 0x2e, 0x86, 0x93,
	0x09, 0xf8, 0x1c, 0x36, 0xd4, 0x42, 0xaa, 0x74, 0x0c, 0x27, 0x97, 0xd8, 0x09, 0xf4, 0x1c, 0x31,
	0x09, 0x64, 0x2a, 0x12, 0x47, 0xdc, 0xe1, 0x0b, 0xe8, 0x48, 0x31, 0xbb, 0xce, 0xfd, 0x1a, 0x9c,
	0xca, 0xed, 0xa8, 0x2d, 0x1c, 0xc2, 0x66, 0x9a, 0xb8, 0xde, 0x8d, 0x48, 0xf2, 0x4a, 0x17, 0x22,
	0x3b, 0x80, 0x7e, 0x65, 0x43, 0xc6, 0x64, 0x24, 0x8c, 0x7c, 0xb1, 0x60, 0x84, 0xb6, 0xd8, 0x1d,
	0x98, 0x97, 0xc2, 0x4d, 0xbc, 0x29, 0x39, 0x7b, 0x06, 0xc6, 0xdd, 0x5c, 0x24, 0x0f, 0xf9, 0xc3,
	0x64, 0x02, 0xbe, 0x84, 0x0d, 0x19, 0xcd, 0x13, 0x4f, 0x28, 0x37, 0xa5, 0x7e, 0xbe, 0x89, 0xdf,
	0x03, 0x78, 0x51, 0x28, 0xd3, 0xc4, 0x0d, 0xc2, 0x54, 0xe5, 0xd8, 0x1b, 0x6d, 0xa9, 0xfa, 0x8c,
	0xcb, 0x6d, 0xa7, 0x76, 0x85, 0xbd, 0x07, 0x28, 0x5c, 0xca, 0x18, 0x5f, 0x83, 0x71, 0x1d, 0xcc,
	0x84, 0x1c, 0xea, 0xbb, 0xed, 0xe5, 0xca, 0x66, 0x67, 0x65, 0x02, 0xad, 0xe5, 0x04, 0x2e, 0x60,
	0xf3, 0x2c, 0x08, 0xfd, 0xa7, 0xc3, 0x6f, 0xc6, 0xd7, 0xfa, 0x7a, 0x7c, 0x3f, 0x52, 0xcf, 0x90,
	0x45, 0x19, 0xe3, 0x01, 0x98, 0x89, 0x90, 0x71, 0x14, 0xca, 0x32, 0xc2, 0x1e, 0xaf, 0xa2, 0x77,
	0xaa, 0x53, 0xc6, 0xc1, 0xba, 0x8a, 0x67, 0x91, 0xeb, 0x8f, 0xa3, 0x90, 0x1e, 0x22, 0xc5, 0xff,
	0x83, 0xa9, 0x1e, 0xf5, 0x92, 0x1a, 0x59, 0x57, 0xaf, 0x5c, 0x6d, 0xb0, 0x3f, 0x75, 0x30, 0x33,
	0x05, 0x8a, 0xbd, 0x2a, 0xb2, 0xfe, 0x58, 0x91, 0xeb, 0x2d, 0xd8, 0x5a, 0xdd, 0x82, 0xdf, 0x41,
	0xd7, 0xcb, 0x23, 0x28, 0x5f, 0xa3, 0x19, 0x98, 0x53, 0x5e, 0x60, 0x2e, 0xf4, 0x4e, 0xa3, 0x4f,
	0xe1, 0x9a, 0x51, 0xbc, 0x82, 0x0e, 0xbd, 0xc7, 0xe3, 0x11, 0xa8, 0xa3, 0x02, 0xd9, 0xed, 0x12,
	0xd9, 0xec, 0x67, 0x18, 0x14, 0x2e, 0xc6, 0x0b, 0x9d, 0xaf, 0xd7, 0x3b, 0xbf, 0xc2, 0x49, 0xab,
	0x86, 0x13, 0x76, 0x08, 0x83, 0xd3, 0x40, 0x7a, 0x51, 0x18, 0x0a, 0x2f, 0xcd, 0x11, 0xf1, 0x54,
	0x33, 0x1f, 0x82, 0x55, 0xbf, 0x2b, 0x63, 0xc2, 0xc8, 0xad, 0x90, 0xd2, 0x9d, 0x88, 0xbc, 0x29,
	0x0a, 0x91, 0x8d, 0x61, 0xf3, 0x22, 0x08, 0x27, 0x6b, 0x64, 0xfd, 0x02, 0x3a, 0xbe, 0x90, 0xe9,
	0x42, 0xf3, 0xd1, 0x16, 0x3b, 0x86, 0x6e, 0x66, 0x44, 0xc6, 0x04, 0x7d, 0xaf, 0x88, 0xcb, 0x70,
	0xd4, 0xba, 0xee, 0xbe, 0xd5, 0x74, 0x3f, 0x80, 0xde, 0x95, 0x14, 0xc9, 0x69, 0x90, 0x48, 0x47,
	0xdc, 0xb1, 0x13, 0xe8, 0x57, 0xa2, 0x8c, 0xa9, 0x16, 0x72, 0xea, 0x26, 0x42, 0xf5, 0x9c, 0xe9,
	0x64, 0x02, 0x35, 0x94, 0x9f, 0x97, 0x52, 0xe6, 0x06, 0xab, 0x0d, 0x76, 0x0e, 0x3b, 0x57, 0xb1,
	0xef, 0xa6, 0xa2, 0x66, 0xf8, 0x3f, 0x19, 0xe2, 0x80, 0x8b, 0x86, 0x56, 0x96, 0x72, 0x0b, 0x06,
	0xe7, 0x22, 0xfd, 0x90, 0x91, 0x0f, 0x65, 0x73, 0x08, 0x56, 0x7d, 0x23, 0x53, 0x2e, 0xb8, 0x4a,
	0x6f, 0x72, 0xd5, 0x11, 0x6c, 0x67, 0xce, 0x2a, 0xfd, 0x15, 0xb7, 0xbf, 0x2d, 0x72, 0xac, 0x1b,
	0x7f, 0xa4, 0xf2, 0x0c, 0xa0, 0xfb, 0x6b, 0xe8, 0x8b, 0xcf, 0x14, 0xce, 0x2b, 0x30, 0xf3, 0x75,
	0x56, 0xd9, 0xeb, 0xd8, 0x4d, 0xa7, 0x05, 0x49, 0x28, 0x81, 0xae, 0x8f, 0x67, 0x91, 0x14, 0x74,
	0x7d, 0x0f, 0xcc, 0x7c, 0xbd, 0x32, 0xeb, 0x63, 0xb0, 0x08, 0xc7, 0x15, 0x89, 0x50, 0xef, 0xdf,
	0x88, 0x87, 0x3c, 0x0c, 0x5a, 0x92, 0xb3, 0x7b, 0x77, 0x36, 0x17, 0xf9, 0x64, 0xc9, 0x04, 0xf6,
	0x06, 0xac, 0x0f, 0x0f, 0x71, 0x5d, 0x13, 0xa1, 0x93, 0x3e, 0xc4, 0x65, 0x06, 0xb4, 0x66, 0x7f,
	0x80, 0xd5, 0x24, 0x29, 0xdc, 0x03, 0xc3, 0x93, 0x05, 0x97, 0x10, 0xac, 0x9b, 0xfe, 0x9d, 0xec,
	0x54, 0x5d, 0x53, 0xd6, 0x0a, 0xae, 0x6b, 0x3a, 0x73, 0xb2, 0x53, 0x76, 0x01, 0xdb, 0x67, 0x22,
	0xf5, 0xa6, 0xe4, 0xe4, 0x7d, 0x20, 0xbf, 0x82, 0xad, 0x35, 0xb0, 0xcf, 0x8e, 0x61, 0x67, 0xc1,
	0xe2, 0x9a, 0xfc, 0xce, 0x1c, 0xd5, 0x30, 0xf5, 0x48, 0x0a, 0x77, 0xfa, 0xd3, 0x54, 0xb3, 0x7a,
	0x2e, 0xb1, 0x77, 0xb0, 0xd5, 0xb0, 0xb9, 0x66, 0x2c, 0xa3, 0xbf, 0x3b, 0xd0, 0x3f, 0xa5, 0x6f,
	0x9c, 0x4b, 0x91, 0xdc, 0x07, 0x9e, 0xc0, 0xd7, 0xb0, 0x91, 0x31, 0x3e, 0x42, 0x49, 0xfd, 0x77,
	0x76, 0x7d, 0x0c, 0x30, 0x0d, 0xdf, 0xc0, 0x46, 0x46, 0xb2, 0x08, 0xbc, 0x64, 0x75, 0x1b, 0x78,
	0xf9, 0x15, 0xc1, 0xb4, 0xb7, 0x3a, 0x7d, 0xad, 0x10, 0x5f, 0x60, 0x97, 0xe7, 0xdc, 0x63, 0x9b,
	0xbc, 0x20, 0x10, 0xa6, 0xd1, 0x31, 0x4d, 0x1e, 0xec, 0xf2, 0x7c, 0xa4, 0xd9, 0x26, 0x2f, 0x46,
	0x11, 0xd3, 0xf0, 0x08, 0xba, 0x05, 0x93, 0x62, 0x9f, 0xd7, 0x78, 0xdb, 0xb6, 0x78, 0x83, 0x62,
	0x95, 0xaf, 0x23, 0xe8, 0x9d, 0x8b, 0xb4, 0x80, 0x30, 0xf6, 0x79, 0x8d, 0x16, 0xec, 0x01, 0xaf,
	0x63, 0x9b, 0x69, 0xf8, 0x13, 0x4d, 0xaf, 0x3a, 0xe6, 0x11, 0xf9, 0x12, 0x9b, 0xd8, 0xff, 0xe3,
	0xcb, 0xc4, 0xc0, 0x34, 0x1a, 0xb1, 0x15, 0xde, 0xd1, 0xe2, 0x0d, 0x36, 0xb0, 0xb7, 0x78, 0x93,
	0x0c, 0x98, 0x86, 0xc7, 0x30, 0x68, 0xc0, 0x18, 0x77, 0xf8, 0x22, 0x09, 0xd8, 0xc8, 0x97, 0x90,
	0xce, 0x34, 0x64, 0x60, 0x28, 0x2c, 0xa3, 0xc9, 0x0b, 0x7c, 0xdb, 0xc0, 0x4b, 0x78, 0xab, 0xcc,
	0x0f, 0xa0, 0x5b, 0x7c, 0xfe, 0x60, 0x9f, 0xd7, 0xbe, 0xa6, 0xec, 0x01, 0xaf, 0x7f, 0x17, 0x65,
	0x81, 0x34, 0x5a, 0x16, 0x77, 0xf8, 0x22, 0x28, 0x6c, 0xe4, 0x4b, 0x5d, 0xcd, 0x34, 0x1c, 0xa9,
	0xf2, 0x96, 0x7a, 0x2a, 0xc9, 0xba, 0xd6, 0x36, 0x5f, 0xe8, 0x3e, 0xa6, 0xe1, 0x2e, 0x18, 0x8a,
	0x59, 0xd0, 0xe4, 0x05, 0xdb, 0xd8, 0xc0, 0x4b, 0xb2, 0x61, 0xda, 0xe8, 0x2f, 0x1d, 0xac, 0x3c,
	0xe1, 0xa2, 0xfd, 0xfe, 0x45, 0x36, 0x7b, 0x6b, 0x74, 0xea, 0x5b, 0x9d, 0x9e, 0xab, 0x1a, 0x93,
	0x68, 0xf1, 0xc6, 0x7c, 0xb5, 0xb7, 0x78, 0x73, 0x86, 0x32, 0xed, 0x64, 0x08, 0xcf, 0x83, 0x88,
	0x4f, 0x82, 0x74, 0x3a, 0xff, 0xc8, 0x27, 0x89, 0x7b, 0x2f, 0xd2, 0x20, 0xe0, 0x13, 0x11, 0x7e,
	0xdc, 0x50, 0xff, 0x01, 0x3f, 0xfc, 0x13, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x57, 0x15, 0x7e, 0x16,
	0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiztlServiceClient is the client API for DiztlService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiztlServiceClient interface {
	Search(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchResp, error)
	Upload(ctx context.Context, in *UploadReq, opts ...grpc.CallOption) (DiztlService_UploadClient, error)
	Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingResp, error)
	Find(ctx context.Context, in *FindReq, opts ...grpc.CallOption) (*FindResp, error)
	Download(ctx context.Context, in *DownloadReq, opts ...grpc.CallOption) (DiztlService_DownloadClient, error)
	GetUserDirs(ctx context.Context, in *UserDirsReq, opts ...grpc.CallOption) (*UserDirsResp, error)
	UpdateUserDirs(ctx context.Context, in *UpdateUserDirsReq, opts ...grpc.CallOption) (*UpdateUserDirsResp, error)
	GetTracker(ctx context.Context, in *GetTrackerReq, opts ...grpc.CallOption) (*GetTrackerResp, error)
	UpdateTracker(ctx context.Context, in *UpdateTrackerReq, opts ...grpc.CallOption) (*UpdateTrackerResp, error)
	Index(ctx context.Context, in *IndexReq, opts ...grpc.CallOption) (DiztlService_IndexClient, error)
	Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
	FetchFileList(ctx context.Context, in *FetchFileListReq, opts ...grpc.CallOption) (*FetchFileListResp, error)
	GetFileList(ctx context.Context, in *GetFileListReq, opts ...grpc.CallOption) (*GetFileListResp, error)
	Close(ctx context.Context, in *CloseReq, opts ...grpc.CallOption) (*CloseResp, error)
}

type diztlServiceClient struct {
	cc *grpc.ClientConn
}

func NewDiztlServiceClient(cc *grpc.ClientConn) DiztlServiceClient {
	return &diztlServiceClient{cc}
}

func (c *diztlServiceClient) Search(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchResp, error) {
	out := new(SearchResp)
	err := c.cc.Invoke(ctx, "/DiztlService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diztlServiceClient) Upload(ctx context.Context, in *UploadReq, opts ...grpc.CallOption) (DiztlService_UploadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DiztlService_serviceDesc.Streams[0], "/DiztlService/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &diztlServiceUploadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DiztlService_UploadClient interface {
	Recv() (*FileChunk, error)
	grpc.ClientStream
}

type diztlServiceUploadClient struct {
	grpc.ClientStream
}

func (x *diztlServiceUploadClient) Recv() (*FileChunk, error) {
	m := new(FileChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *diztlServiceClient) Ping(ctx context.Context, in *PingReq, opts ...grpc.CallOption) (*PingResp, error) {
	out := new(PingResp)
	err := c.cc.Invoke(ctx, "/DiztlService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diztlServiceClient) Find(ctx context.Context, in *FindReq, opts ...grpc.CallOption) (*FindResp, error) {
	out := new(FindResp)
	err := c.cc.Invoke(ctx, "/DiztlService/Find", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diztlServiceClient) Download(ctx context.Context, in *DownloadReq, opts ...grpc.CallOption) (DiztlService_DownloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DiztlService_serviceDesc.Streams[1], "/DiztlService/Download", opts...)
	if err != nil {
		return nil, err
	}
	x := &diztlServiceDownloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DiztlService_DownloadClient interface {
	Recv() (*DownloadChunk, error)
	grpc.ClientStream
}

type diztlServiceDownloadClient struct {
	grpc.ClientStream
}

func (x *diztlServiceDownloadClient) Recv() (*DownloadChunk, error) {
	m := new(DownloadChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *diztlServiceClient) GetUserDirs(ctx context.Context, in *UserDirsReq, opts ...grpc.CallOption) (*UserDirsResp, error) {
	out := new(UserDirsResp)
	err := c.cc.Invoke(ctx, "/DiztlService/GetUserDirs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diztlServiceClient) UpdateUserDirs(ctx context.Context, in *UpdateUserDirsReq, opts ...grpc.CallOption) (*UpdateUserDirsResp, error) {
	out := new(UpdateUserDirsResp)
	err := c.cc.Invoke(ctx, "/DiztlService/UpdateUserDirs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diztlServiceClient) GetTracker(ctx context.Context, in *GetTrackerReq, opts ...grpc.CallOption) (*GetTrackerResp, error) {
	out := new(GetTrackerResp)
	err := c.cc.Invoke(ctx, "/DiztlService/GetTracker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diztlServiceClient) UpdateTracker(ctx context.Context, in *UpdateTrackerReq, opts ...grpc.CallOption) (*UpdateTrackerResp, error) {
	out := new(UpdateTrackerResp)
	err := c.cc.Invoke(ctx, "/DiztlService/UpdateTracker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diztlServiceClient) Index(ctx context.Context, in *IndexReq, opts ...grpc.CallOption) (DiztlService_IndexClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DiztlService_serviceDesc.Streams[2], "/DiztlService/Index", opts...)
	if err != nil {
		return nil, err
	}
	x := &diztlServiceIndexClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DiztlService_IndexClient interface {
	Recv() (*IndexResp, error)
	grpc.ClientStream
}

type diztlServiceIndexClient struct {
	grpc.ClientStream
}

func (x *diztlServiceIndexClient) Recv() (*IndexResp, error) {
	m := new(IndexResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *diztlServiceClient) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	out := new(RegisterResp)
	err := c.cc.Invoke(ctx, "/DiztlService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diztlServiceClient) FetchFileList(ctx context.Context, in *FetchFileListReq, opts ...grpc.CallOption) (*FetchFileListResp, error) {
	out := new(FetchFileListResp)
	err := c.cc.Invoke(ctx, "/DiztlService/FetchFileList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diztlServiceClient) GetFileList(ctx context.Context, in *GetFileListReq, opts ...grpc.CallOption) (*GetFileListResp, error) {
	out := new(GetFileListResp)
	err := c.cc.Invoke(ctx, "/DiztlService/GetFileList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diztlServiceClient) Close(ctx context.Context, in *CloseReq, opts ...grpc.CallOption) (*CloseResp, error) {
	out := new(CloseResp)
	err := c.cc.Invoke(ctx, "/DiztlService/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiztlServiceServer is the server API for DiztlService service.
type DiztlServiceServer interface {
	Search(context.Context, *SearchReq) (*SearchResp, error)
	Upload(*UploadReq, DiztlService_UploadServer) error
	Ping(context.Context, *PingReq) (*PingResp, error)
	Find(context.Context, *FindReq) (*FindResp, error)
	Download(*DownloadReq, DiztlService_DownloadServer) error
	GetUserDirs(context.Context, *UserDirsReq) (*UserDirsResp, error)
	UpdateUserDirs(context.Context, *UpdateUserDirsReq) (*UpdateUserDirsResp, error)
	GetTracker(context.Context, *GetTrackerReq) (*GetTrackerResp, error)
	UpdateTracker(context.Context, *UpdateTrackerReq) (*UpdateTrackerResp, error)
	Index(*IndexReq, DiztlService_IndexServer) error
	Register(context.Context, *RegisterReq) (*RegisterResp, error)
	FetchFileList(context.Context, *FetchFileListReq) (*FetchFileListResp, error)
	GetFileList(context.Context, *GetFileListReq) (*GetFileListResp, error)
	Close(context.Context, *CloseReq) (*CloseResp, error)
}

func RegisterDiztlServiceServer(s *grpc.Server, srv DiztlServiceServer) {
	s.RegisterService(&_DiztlService_serviceDesc, srv)
}

func _DiztlService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiztlServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DiztlService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiztlServiceServer).Search(ctx, req.(*SearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiztlService_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UploadReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DiztlServiceServer).Upload(m, &diztlServiceUploadServer{stream})
}

type DiztlService_UploadServer interface {
	Send(*FileChunk) error
	grpc.ServerStream
}

type diztlServiceUploadServer struct {
	grpc.ServerStream
}

func (x *diztlServiceUploadServer) Send(m *FileChunk) error {
	return x.ServerStream.SendMsg(m)
}

func _DiztlService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiztlServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DiztlService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiztlServiceServer).Ping(ctx, req.(*PingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiztlService_Find_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiztlServiceServer).Find(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DiztlService/Find",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiztlServiceServer).Find(ctx, req.(*FindReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiztlService_Download_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DiztlServiceServer).Download(m, &diztlServiceDownloadServer{stream})
}

type DiztlService_DownloadServer interface {
	Send(*DownloadChunk) error
	grpc.ServerStream
}

type diztlServiceDownloadServer struct {
	grpc.ServerStream
}

func (x *diztlServiceDownloadServer) Send(m *DownloadChunk) error {
	return x.ServerStream.SendMsg(m)
}

func _DiztlService_GetUserDirs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDirsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiztlServiceServer).GetUserDirs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DiztlService/GetUserDirs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiztlServiceServer).GetUserDirs(ctx, req.(*UserDirsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiztlService_UpdateUserDirs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserDirsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiztlServiceServer).UpdateUserDirs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DiztlService/UpdateUserDirs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiztlServiceServer).UpdateUserDirs(ctx, req.(*UpdateUserDirsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiztlService_GetTracker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTrackerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiztlServiceServer).GetTracker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DiztlService/GetTracker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiztlServiceServer).GetTracker(ctx, req.(*GetTrackerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiztlService_UpdateTracker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTrackerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiztlServiceServer).UpdateTracker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DiztlService/UpdateTracker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiztlServiceServer).UpdateTracker(ctx, req.(*UpdateTrackerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiztlService_Index_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(IndexReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DiztlServiceServer).Index(m, &diztlServiceIndexServer{stream})
}

type DiztlService_IndexServer interface {
	Send(*IndexResp) error
	grpc.ServerStream
}

type diztlServiceIndexServer struct {
	grpc.ServerStream
}

func (x *diztlServiceIndexServer) Send(m *IndexResp) error {
	return x.ServerStream.SendMsg(m)
}

func _DiztlService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiztlServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DiztlService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiztlServiceServer).Register(ctx, req.(*RegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiztlService_FetchFileList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchFileListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiztlServiceServer).FetchFileList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DiztlService/FetchFileList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiztlServiceServer).FetchFileList(ctx, req.(*FetchFileListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiztlService_GetFileList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFileListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiztlServiceServer).GetFileList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DiztlService/GetFileList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiztlServiceServer).GetFileList(ctx, req.(*GetFileListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiztlService_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiztlServiceServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DiztlService/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiztlServiceServer).Close(ctx, req.(*CloseReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiztlService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DiztlService",
	HandlerType: (*DiztlServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _DiztlService_Search_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _DiztlService_Ping_Handler,
		},
		{
			MethodName: "Find",
			Handler:    _DiztlService_Find_Handler,
		},
		{
			MethodName: "GetUserDirs",
			Handler:    _DiztlService_GetUserDirs_Handler,
		},
		{
			MethodName: "UpdateUserDirs",
			Handler:    _DiztlService_UpdateUserDirs_Handler,
		},
		{
			MethodName: "GetTracker",
			Handler:    _DiztlService_GetTracker_Handler,
		},
		{
			MethodName: "UpdateTracker",
			Handler:    _DiztlService_UpdateTracker_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _DiztlService_Register_Handler,
		},
		{
			MethodName: "FetchFileList",
			Handler:    _DiztlService_FetchFileList_Handler,
		},
		{
			MethodName: "GetFileList",
			Handler:    _DiztlService_GetFileList_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _DiztlService_Close_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Upload",
			Handler:       _DiztlService_Upload_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Download",
			Handler:       _DiztlService_Download_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Index",
			Handler:       _DiztlService_Index_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "diztl.proto",
}

// TrackerServiceClient is the client API for TrackerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrackerServiceClient interface {
	Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
	Search(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (TrackerService_SearchClient, error)
	Disconnect(ctx context.Context, in *DisconnectReq, opts ...grpc.CallOption) (*DisconnectResp, error)
}

type trackerServiceClient struct {
	cc *grpc.ClientConn
}

func NewTrackerServiceClient(cc *grpc.ClientConn) TrackerServiceClient {
	return &trackerServiceClient{cc}
}

func (c *trackerServiceClient) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	out := new(RegisterResp)
	err := c.cc.Invoke(ctx, "/TrackerService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackerServiceClient) Search(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (TrackerService_SearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TrackerService_serviceDesc.Streams[0], "/TrackerService/Search", opts...)
	if err != nil {
		return nil, err
	}
	x := &trackerServiceSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TrackerService_SearchClient interface {
	Recv() (*SearchResp, error)
	grpc.ClientStream
}

type trackerServiceSearchClient struct {
	grpc.ClientStream
}

func (x *trackerServiceSearchClient) Recv() (*SearchResp, error) {
	m := new(SearchResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *trackerServiceClient) Disconnect(ctx context.Context, in *DisconnectReq, opts ...grpc.CallOption) (*DisconnectResp, error) {
	out := new(DisconnectResp)
	err := c.cc.Invoke(ctx, "/TrackerService/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrackerServiceServer is the server API for TrackerService service.
type TrackerServiceServer interface {
	Register(context.Context, *RegisterReq) (*RegisterResp, error)
	Search(*SearchReq, TrackerService_SearchServer) error
	Disconnect(context.Context, *DisconnectReq) (*DisconnectResp, error)
}

func RegisterTrackerServiceServer(s *grpc.Server, srv TrackerServiceServer) {
	s.RegisterService(&_TrackerService_serviceDesc, srv)
}

func _TrackerService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackerServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TrackerService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackerServiceServer).Register(ctx, req.(*RegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrackerService_Search_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TrackerServiceServer).Search(m, &trackerServiceSearchServer{stream})
}

type TrackerService_SearchServer interface {
	Send(*SearchResp) error
	grpc.ServerStream
}

type trackerServiceSearchServer struct {
	grpc.ServerStream
}

func (x *trackerServiceSearchServer) Send(m *SearchResp) error {
	return x.ServerStream.SendMsg(m)
}

func _TrackerService_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackerServiceServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TrackerService/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackerServiceServer).Disconnect(ctx, req.(*DisconnectReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TrackerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TrackerService",
	HandlerType: (*TrackerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _TrackerService_Register_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _TrackerService_Disconnect_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Search",
			Handler:       _TrackerService_Search_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "diztl.proto",
}
