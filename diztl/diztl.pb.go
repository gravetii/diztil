// Code generated by protoc-gen-go. DO NOT EDIT.
// source: diztl.proto

package diztl

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Node struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{0}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type FileMetadata struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Size                 int64    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Chunks               int32    `protobuf:"varint,4,opt,name=chunks,proto3" json:"chunks,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileMetadata) Reset()         { *m = FileMetadata{} }
func (m *FileMetadata) String() string { return proto.CompactTextString(m) }
func (*FileMetadata) ProtoMessage()    {}
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{1}
}

func (m *FileMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileMetadata.Unmarshal(m, b)
}
func (m *FileMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileMetadata.Marshal(b, m, deterministic)
}
func (m *FileMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileMetadata.Merge(m, src)
}
func (m *FileMetadata) XXX_Size() int {
	return xxx_messageInfo_FileMetadata.Size(m)
}
func (m *FileMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_FileMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_FileMetadata proto.InternalMessageInfo

func (m *FileMetadata) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FileMetadata) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FileMetadata) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileMetadata) GetChunks() int32 {
	if m != nil {
		return m.Chunks
	}
	return 0
}

func (m *FileMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type FileChunk struct {
	Metadata             *FileMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Data                 []byte        `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Chunk                int32         `protobuf:"varint,3,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FileChunk) Reset()         { *m = FileChunk{} }
func (m *FileChunk) String() string { return proto.CompactTextString(m) }
func (*FileChunk) ProtoMessage()    {}
func (*FileChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{2}
}

func (m *FileChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileChunk.Unmarshal(m, b)
}
func (m *FileChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileChunk.Marshal(b, m, deterministic)
}
func (m *FileChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileChunk.Merge(m, src)
}
func (m *FileChunk) XXX_Size() int {
	return xxx_messageInfo_FileChunk.Size(m)
}
func (m *FileChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_FileChunk.DiscardUnknown(m)
}

var xxx_messageInfo_FileChunk proto.InternalMessageInfo

func (m *FileChunk) GetMetadata() *FileMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *FileChunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FileChunk) GetChunk() int32 {
	if m != nil {
		return m.Chunk
	}
	return 0
}

type SearchReq struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Source               *Node    `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchReq) Reset()         { *m = SearchReq{} }
func (m *SearchReq) String() string { return proto.CompactTextString(m) }
func (*SearchReq) ProtoMessage()    {}
func (*SearchReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{3}
}

func (m *SearchReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReq.Unmarshal(m, b)
}
func (m *SearchReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReq.Marshal(b, m, deterministic)
}
func (m *SearchReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReq.Merge(m, src)
}
func (m *SearchReq) XXX_Size() int {
	return xxx_messageInfo_SearchReq.Size(m)
}
func (m *SearchReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReq.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReq proto.InternalMessageInfo

func (m *SearchReq) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *SearchReq) GetSource() *Node {
	if m != nil {
		return m.Source
	}
	return nil
}

type SearchResp struct {
	Files                []*FileMetadata `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Node                 *Node           `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SearchResp) Reset()         { *m = SearchResp{} }
func (m *SearchResp) String() string { return proto.CompactTextString(m) }
func (*SearchResp) ProtoMessage()    {}
func (*SearchResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{4}
}

func (m *SearchResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResp.Unmarshal(m, b)
}
func (m *SearchResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResp.Marshal(b, m, deterministic)
}
func (m *SearchResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResp.Merge(m, src)
}
func (m *SearchResp) XXX_Size() int {
	return xxx_messageInfo_SearchResp.Size(m)
}
func (m *SearchResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResp.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResp proto.InternalMessageInfo

func (m *SearchResp) GetFiles() []*FileMetadata {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *SearchResp) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type DownloadReq struct {
	Source               *Node         `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Metadata             *FileMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DownloadReq) Reset()         { *m = DownloadReq{} }
func (m *DownloadReq) String() string { return proto.CompactTextString(m) }
func (*DownloadReq) ProtoMessage()    {}
func (*DownloadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{5}
}

func (m *DownloadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadReq.Unmarshal(m, b)
}
func (m *DownloadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadReq.Marshal(b, m, deterministic)
}
func (m *DownloadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadReq.Merge(m, src)
}
func (m *DownloadReq) XXX_Size() int {
	return xxx_messageInfo_DownloadReq.Size(m)
}
func (m *DownloadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadReq.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadReq proto.InternalMessageInfo

func (m *DownloadReq) GetSource() *Node {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *DownloadReq) GetMetadata() *FileMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type DisconnectReq struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectReq) Reset()         { *m = DisconnectReq{} }
func (m *DisconnectReq) String() string { return proto.CompactTextString(m) }
func (*DisconnectReq) ProtoMessage()    {}
func (*DisconnectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{6}
}

func (m *DisconnectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectReq.Unmarshal(m, b)
}
func (m *DisconnectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectReq.Marshal(b, m, deterministic)
}
func (m *DisconnectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectReq.Merge(m, src)
}
func (m *DisconnectReq) XXX_Size() int {
	return xxx_messageInfo_DisconnectReq.Size(m)
}
func (m *DisconnectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectReq.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectReq proto.InternalMessageInfo

func (m *DisconnectReq) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type DisconnectResp struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectResp) Reset()         { *m = DisconnectResp{} }
func (m *DisconnectResp) String() string { return proto.CompactTextString(m) }
func (*DisconnectResp) ProtoMessage()    {}
func (*DisconnectResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa22f24bd08bc677, []int{7}
}

func (m *DisconnectResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectResp.Unmarshal(m, b)
}
func (m *DisconnectResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectResp.Marshal(b, m, deterministic)
}
func (m *DisconnectResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectResp.Merge(m, src)
}
func (m *DisconnectResp) XXX_Size() int {
	return xxx_messageInfo_DisconnectResp.Size(m)
}
func (m *DisconnectResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectResp.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectResp proto.InternalMessageInfo

func (m *DisconnectResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Node)(nil), "Node")
	proto.RegisterType((*FileMetadata)(nil), "FileMetadata")
	proto.RegisterType((*FileChunk)(nil), "FileChunk")
	proto.RegisterType((*SearchReq)(nil), "SearchReq")
	proto.RegisterType((*SearchResp)(nil), "SearchResp")
	proto.RegisterType((*DownloadReq)(nil), "DownloadReq")
	proto.RegisterType((*DisconnectReq)(nil), "DisconnectReq")
	proto.RegisterType((*DisconnectResp)(nil), "DisconnectResp")
}

func init() { proto.RegisterFile("diztl.proto", fileDescriptor_fa22f24bd08bc677) }

var fileDescriptor_fa22f24bd08bc677 = []byte{
	// 429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xcd, 0x26, 0xb1, 0x49, 0xc6, 0x69, 0x90, 0x46, 0x08, 0x19, 0x4b, 0x48, 0xd1, 0x56, 0x54,
	0xa5, 0x87, 0xa5, 0x0a, 0x3f, 0x81, 0xa8, 0x27, 0xe0, 0xe0, 0x82, 0x38, 0x70, 0x61, 0xf1, 0x0e,
	0xcd, 0xaa, 0x89, 0xd7, 0xec, 0xba, 0x20, 0xf5, 0xcc, 0x0f, 0x47, 0xbb, 0xfe, 0xa8, 0x43, 0x10,
	0xe2, 0xe4, 0x99, 0xdd, 0x37, 0xef, 0xbd, 0x79, 0xb6, 0x21, 0x51, 0xfa, 0xbe, 0xde, 0x89, 0xca,
	0x9a, 0xda, 0xf0, 0x33, 0x98, 0xbe, 0x37, 0x8a, 0x70, 0x09, 0x63, 0x5d, 0xa5, 0x6c, 0xc5, 0xce,
	0xe7, 0xf9, 0x58, 0x57, 0xa1, 0x57, 0xe9, 0xb8, 0xed, 0x15, 0xb7, 0xb0, 0xb8, 0xd2, 0x3b, 0x7a,
	0x47, 0xb5, 0x54, 0xb2, 0x96, 0x88, 0x30, 0xad, 0x64, 0xbd, 0x6d, 0x27, 0x42, 0x3d, 0x98, 0x89,
	0xfc, 0x8c, 0xc7, 0x38, 0x7d, 0x4f, 0xe9, 0x64, 0xc5, 0xce, 0x27, 0x79, 0xa8, 0xf1, 0x29, 0xc4,
	0xc5, 0xf6, 0xae, 0xbc, 0x75, 0xe9, 0x34, 0xe0, 0xda, 0xce, 0x63, 0x4b, 0xb9, 0xa7, 0x34, 0x6a,
	0xf8, 0x7c, 0xcd, 0xbf, 0xc0, 0xdc, 0x6b, 0xbe, 0xf1, 0x08, 0x7c, 0x09, 0xb3, 0x7d, 0x2b, 0x1e,
	0x44, 0x93, 0xf5, 0x89, 0x18, 0x3a, 0xca, 0xfb, 0x6b, 0xcf, 0x15, 0x60, 0xde, 0xc9, 0x22, 0x0f,
	0x35, 0x3e, 0x81, 0x28, 0x28, 0x05, 0x33, 0x51, 0xde, 0x34, 0xfc, 0x0a, 0xe6, 0xd7, 0x24, 0x6d,
	0xb1, 0xcd, 0xe9, 0x3b, 0x66, 0x30, 0xfb, 0xa6, 0x77, 0x14, 0x6c, 0x34, 0x6b, 0xf5, 0x3d, 0x3e,
	0x87, 0xd8, 0x99, 0x3b, 0x5b, 0x50, 0x20, 0x4d, 0xd6, 0x91, 0xf0, 0xa9, 0xe5, 0xed, 0x21, 0x7f,
	0x0b, 0xd0, 0xf1, 0xb8, 0x0a, 0x4f, 0x21, 0xf2, 0x83, 0x2e, 0x65, 0xab, 0xc9, 0xb1, 0xcf, 0xe6,
	0x0e, 0x9f, 0xc1, 0xb4, 0x34, 0xea, 0x0f, 0xbe, 0x70, 0xc4, 0x3f, 0x41, 0xb2, 0x31, 0x3f, 0xcb,
	0x9d, 0x91, 0xca, 0xfb, 0x7a, 0xd0, 0x66, 0x7f, 0xd1, 0x3e, 0x08, 0x66, 0xfc, 0xcf, 0x60, 0xf8,
	0x05, 0x9c, 0x6c, 0xb4, 0x2b, 0x4c, 0x59, 0x52, 0x51, 0x7b, 0xea, 0xce, 0x04, 0x3b, 0x36, 0x71,
	0x01, 0xcb, 0x21, 0xd6, 0x55, 0x98, 0xc2, 0xa3, 0x3d, 0x39, 0x27, 0x6f, 0xba, 0x78, 0xba, 0x76,
	0xfd, 0x19, 0x16, 0x1b, 0xff, 0x4d, 0x5d, 0x93, 0xfd, 0xa1, 0x0b, 0xc2, 0x53, 0x88, 0x9b, 0x38,
	0x10, 0x44, 0x9f, 0x6f, 0x96, 0x88, 0x87, 0x8c, 0xf8, 0x08, 0xcf, 0x20, 0xfe, 0x58, 0xf9, 0x1d,
	0x71, 0x21, 0x06, 0xeb, 0x66, 0x20, 0xfa, 0x97, 0xce, 0x47, 0x97, 0x6c, 0xfd, 0x8b, 0xc1, 0xf2,
	0x83, 0x95, 0xc5, 0x2d, 0xd9, 0x8e, 0x3f, 0x83, 0x59, 0x4e, 0x37, 0xda, 0xd5, 0x64, 0xb1, 0x31,
	0x9d, 0x35, 0x0f, 0x3e, 0xc2, 0x17, 0xff, 0xa1, 0x7d, 0xc9, 0xf0, 0x15, 0x80, 0xea, 0xd7, 0xc3,
	0xa5, 0x38, 0xc8, 0x25, 0x7b, 0x2c, 0x0e, 0x77, 0xe7, 0xa3, 0xaf, 0x71, 0xf8, 0x5f, 0x5e, 0xff,
	0x0e, 0x00, 0x00, 0xff, 0xff, 0x25, 0x4a, 0x18, 0xf2, 0x3e, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiztlServiceClient is the client API for DiztlService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiztlServiceClient interface {
	Search(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchResp, error)
	Upload(ctx context.Context, in *DownloadReq, opts ...grpc.CallOption) (DiztlService_UploadClient, error)
}

type diztlServiceClient struct {
	cc *grpc.ClientConn
}

func NewDiztlServiceClient(cc *grpc.ClientConn) DiztlServiceClient {
	return &diztlServiceClient{cc}
}

func (c *diztlServiceClient) Search(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchResp, error) {
	out := new(SearchResp)
	err := c.cc.Invoke(ctx, "/DiztlService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diztlServiceClient) Upload(ctx context.Context, in *DownloadReq, opts ...grpc.CallOption) (DiztlService_UploadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DiztlService_serviceDesc.Streams[0], "/DiztlService/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &diztlServiceUploadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DiztlService_UploadClient interface {
	Recv() (*FileChunk, error)
	grpc.ClientStream
}

type diztlServiceUploadClient struct {
	grpc.ClientStream
}

func (x *diztlServiceUploadClient) Recv() (*FileChunk, error) {
	m := new(FileChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DiztlServiceServer is the server API for DiztlService service.
type DiztlServiceServer interface {
	Search(context.Context, *SearchReq) (*SearchResp, error)
	Upload(*DownloadReq, DiztlService_UploadServer) error
}

func RegisterDiztlServiceServer(s *grpc.Server, srv DiztlServiceServer) {
	s.RegisterService(&_DiztlService_serviceDesc, srv)
}

func _DiztlService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiztlServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DiztlService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiztlServiceServer).Search(ctx, req.(*SearchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiztlService_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DiztlServiceServer).Upload(m, &diztlServiceUploadServer{stream})
}

type DiztlService_UploadServer interface {
	Send(*FileChunk) error
	grpc.ServerStream
}

type diztlServiceUploadServer struct {
	grpc.ServerStream
}

func (x *diztlServiceUploadServer) Send(m *FileChunk) error {
	return x.ServerStream.SendMsg(m)
}

var _DiztlService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DiztlService",
	HandlerType: (*DiztlServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _DiztlService_Search_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Upload",
			Handler:       _DiztlService_Upload_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "diztl.proto",
}

// TrackerServiceClient is the client API for TrackerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrackerServiceClient interface {
	Register(ctx context.Context, in *Node, opts ...grpc.CallOption) (*Node, error)
	Search(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (TrackerService_SearchClient, error)
	Disconnect(ctx context.Context, in *DisconnectReq, opts ...grpc.CallOption) (*DisconnectResp, error)
}

type trackerServiceClient struct {
	cc *grpc.ClientConn
}

func NewTrackerServiceClient(cc *grpc.ClientConn) TrackerServiceClient {
	return &trackerServiceClient{cc}
}

func (c *trackerServiceClient) Register(ctx context.Context, in *Node, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/TrackerService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trackerServiceClient) Search(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (TrackerService_SearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TrackerService_serviceDesc.Streams[0], "/TrackerService/Search", opts...)
	if err != nil {
		return nil, err
	}
	x := &trackerServiceSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TrackerService_SearchClient interface {
	Recv() (*SearchResp, error)
	grpc.ClientStream
}

type trackerServiceSearchClient struct {
	grpc.ClientStream
}

func (x *trackerServiceSearchClient) Recv() (*SearchResp, error) {
	m := new(SearchResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *trackerServiceClient) Disconnect(ctx context.Context, in *DisconnectReq, opts ...grpc.CallOption) (*DisconnectResp, error) {
	out := new(DisconnectResp)
	err := c.cc.Invoke(ctx, "/TrackerService/disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrackerServiceServer is the server API for TrackerService service.
type TrackerServiceServer interface {
	Register(context.Context, *Node) (*Node, error)
	Search(*SearchReq, TrackerService_SearchServer) error
	Disconnect(context.Context, *DisconnectReq) (*DisconnectResp, error)
}

func RegisterTrackerServiceServer(s *grpc.Server, srv TrackerServiceServer) {
	s.RegisterService(&_TrackerService_serviceDesc, srv)
}

func _TrackerService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackerServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TrackerService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackerServiceServer).Register(ctx, req.(*Node))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrackerService_Search_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TrackerServiceServer).Search(m, &trackerServiceSearchServer{stream})
}

type TrackerService_SearchServer interface {
	Send(*SearchResp) error
	grpc.ServerStream
}

type trackerServiceSearchServer struct {
	grpc.ServerStream
}

func (x *trackerServiceSearchServer) Send(m *SearchResp) error {
	return x.ServerStream.SendMsg(m)
}

func _TrackerService_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrackerServiceServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TrackerService/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrackerServiceServer).Disconnect(ctx, req.(*DisconnectReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TrackerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TrackerService",
	HandlerType: (*TrackerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _TrackerService_Register_Handler,
		},
		{
			MethodName: "disconnect",
			Handler:    _TrackerService_Disconnect_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Search",
			Handler:       _TrackerService_Search_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "diztl.proto",
}
